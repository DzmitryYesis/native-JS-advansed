[{"D:\\New-Life\\it-kamasutra\\native-evgene\\src\\index.tsx":"1","D:\\New-Life\\it-kamasutra\\native-evgene\\src\\redux\\state.ts":"2","D:\\New-Life\\it-kamasutra\\native-evgene\\src\\App.tsx":"3","D:\\New-Life\\it-kamasutra\\native-evgene\\src\\redux\\currencyReducer.ts":"4","D:\\New-Life\\it-kamasutra\\native-evgene\\src\\lessons\\lesson1\\lesson1.tsx":"5","D:\\New-Life\\it-kamasutra\\native-evgene\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"6","D:\\New-Life\\it-kamasutra\\native-evgene\\src\\redux\\actions.ts":"7","D:\\New-Life\\it-kamasutra\\native-evgene\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"8","D:\\New-Life\\it-kamasutra\\native-evgene\\src\\lessons\\lesson3\\Lesson3.tsx":"9","D:\\New-Life\\it-kamasutra\\native-evgene\\src\\lessons\\lesson3\\lesson_3.ts":"10","D:\\New-Life\\it-kamasutra\\native-evgene\\src\\lessons\\lesson3\\API.ts":"11"},{"size":319,"mtime":1609752860853,"results":"12","hashOfConfig":"13"},{"size":286,"mtime":1609751766196,"results":"14","hashOfConfig":"13"},{"size":716,"mtime":1642695411532,"results":"15","hashOfConfig":"13"},{"size":1088,"mtime":1609753971088,"results":"16","hashOfConfig":"13"},{"size":860,"mtime":1609756877852,"results":"17","hashOfConfig":"13"},{"size":3826,"mtime":1641834247246,"results":"18","hashOfConfig":"13"},{"size":843,"mtime":1609760554269,"results":"19","hashOfConfig":"13"},{"size":3871,"mtime":1609757735301,"results":"20","hashOfConfig":"13"},{"size":1599,"mtime":1601709406000,"results":"21","hashOfConfig":"13"},{"size":1667,"mtime":1642697677685,"results":"22","hashOfConfig":"13"},{"size":326,"mtime":1601709172000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"11lktzp",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"D:\\New-Life\\it-kamasutra\\native-evgene\\src\\index.tsx",[],["51","52"],"D:\\New-Life\\it-kamasutra\\native-evgene\\src\\redux\\state.ts",[],"D:\\New-Life\\it-kamasutra\\native-evgene\\src\\App.tsx",["53"],"import React from 'react';\r\nimport './App.css';\r\nimport Lesson1 from './lessons/lesson1/lesson1';\r\nimport Lesson3 from './lessons/lesson3/Lesson3';\r\n// import Lesson1 from './lessons/lesson1/lesson1';\r\n// import './lessons/lesson2/lesson2';\r\n// import Lesson3 from './lessons/lesson3/Lesson3';\r\n// import Lesson4 from './lessons/lesson4/Lesson4';\r\n// import './lessons/lesson5/lesson5';\r\n// import './lessons/lesson6/lesson6';\r\n// import './lessons/lesson7/lesson7';\r\n// import './lessons/lesson8/lesson8';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"container\">\r\n            {/*<Lesson1 />*/}\r\n            <Lesson3 />\r\n            {/*<Lesson4 />*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","D:\\New-Life\\it-kamasutra\\native-evgene\\src\\redux\\currencyReducer.ts",[],"D:\\New-Life\\it-kamasutra\\native-evgene\\src\\lessons\\lesson1\\lesson1.tsx",[],"D:\\New-Life\\it-kamasutra\\native-evgene\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",[],"D:\\New-Life\\it-kamasutra\\native-evgene\\src\\redux\\actions.ts",[],"D:\\New-Life\\it-kamasutra\\native-evgene\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"D:\\New-Life\\it-kamasutra\\native-evgene\\src\\lessons\\lesson3\\Lesson3.tsx",["54","55"],"import React, { useState } from 'react';\r\nimport API from './API';\r\nimport './lesson_3';\r\n\r\nconst Lesson3 = () => {\r\n    const [searchName, setSearchName] = useState('');\r\n    const [serachResult, setSerachResult] = useState('');\r\n    const [searchNameByType, setSearchNameByType] = useState('');\r\n    const [serachResultByType, setSerachResultByType] = useState('');\r\n\r\n    const searchFilm = () => {\r\n        API.searchFilmsByTitle(searchName)\r\n    };\r\n\r\n    const searchByType = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        const type: string = e.currentTarget.dataset.t ? e.currentTarget.dataset.t : '';\r\n        API.searchFilmsByType(searchNameByType, type)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Promises</h1>\r\n            <div>\r\n                <h3><p>Search by name:</p></h3>\r\n                <input type=\"text\" value={searchName} onChange={(e) => setSearchName(e.currentTarget.value)}/>\r\n                <button onClick={searchFilm}>Search</button>\r\n                <div>\r\n                    {serachResult}\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <h3><p>Search by type:</p></h3>\r\n                <input type=\"text\" value={searchNameByType} onChange={(e) => setSearchNameByType(e.currentTarget.value)}/>\r\n                <button onClick={searchByType} data-t='movie'>Movie</button>\r\n                <button onClick={searchByType} data-t='series'>Series</button>\r\n                <div>\r\n                    {serachResultByType}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Lesson3;","D:\\New-Life\\it-kamasutra\\native-evgene\\src\\lessons\\lesson3\\lesson_3.ts",["56"],"console.log('lesson 3');\r\n\r\n// Event loop\r\n// https://learn.javascript.ru/event-loop\r\n// https://habr.com/ru/company/ruvds/blog/340508/\r\n// https://www.youtube.com/watch?v=8aGhZQkoFbQ\r\n// https://www.youtube.com/watch?v=j4_9BZezSUA\r\n// https://www.jsv9000.app/\r\n\r\n// Promise\r\n// https://learn.javascript.ru/promise-basics\r\n// https://www.youtube.com/watch?v=1idOY3C1gYU\r\n\r\n\r\n// https://jsonplaceholder.typicode.com/posts/1\r\n// https://habr.com/ru/company/oleg-bunin/blog/417461/?_ga=2.54695343.543933152.1602500664-1040035071.1596811661\r\n\r\n// let porom = new Promise((resolve, reject) => {\r\n// // симулируем запрос\r\n//     setTimeout((response) => {\r\n//         if (response.HTTPstatus >= 200 && response.HTTPstatus < 400) {\r\n//             resolve(response.body);\r\n//         } else {\r\n//             reject(response.error);\r\n//         }\r\n//     }, 200, {HTTPstatus: 200, body: {data: 'success'}, error: ''})\r\n// });\r\n//\r\n// porom\r\n//     .then((res: any) => {\r\n//         console.log(res)\r\n//         return 2\r\n//     })\r\n//     .then((res2) => {\r\n//         console.log(res2)\r\n//     })\r\n//     .then((res3)=>{\r\n//         console.log('res3', res3)\r\n//     })\r\n\r\nlet userDataProm = new Promise((resolve, reject) => {\r\n// симулируем запрос\r\n    setTimeout((response) => {\r\n        if (response.HTTPstatus >= 200 && response.HTTPstatus < 400) {\r\n            resolve(response.body.access_token);\r\n        } else {\r\n            reject(response.error);\r\n        }\r\n    }, 1000, {HTTPstatus: 200, body: {access_token: 'sdfgsfsfhdhadfhdafhuccess'}, error: ''})\r\n});\r\n\r\nconsole.log(userDataProm)\r\n// just a plug\r\nexport default () => {\r\n};","D:\\New-Life\\it-kamasutra\\native-evgene\\src\\lessons\\lesson3\\API.ts",["57","58"],"import axios from 'axios';\r\n\r\nconst configOMB = {\r\n    baseURL: 'http://www.omdbapi.com',\r\n};\r\nconst key = '';\r\nconst axiosInstance = axios.create(configOMB);\r\n\r\nconst API = {\r\n    searchFilmsByTitle: (title: string) => {\r\n    },\r\n    searchFilmsByType: (title: string, type: string) => {\r\n    }\r\n};\r\n\r\n\r\nexport default API;\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":15},{"ruleId":"63","severity":1,"message":"67","line":7,"column":26,"nodeType":"65","messageId":"66","endLine":7,"endColumn":41},{"ruleId":"63","severity":1,"message":"68","line":9,"column":32,"nodeType":"65","messageId":"66","endLine":9,"endColumn":53},{"ruleId":"69","severity":1,"message":"70","line":54,"column":1,"nodeType":"71","endLine":55,"endColumn":3},{"ruleId":"63","severity":1,"message":"72","line":6,"column":7,"nodeType":"65","messageId":"66","endLine":6,"endColumn":10},{"ruleId":"63","severity":1,"message":"73","line":7,"column":7,"nodeType":"65","messageId":"66","endLine":7,"endColumn":20},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'Lesson1' is defined but never used.","Identifier","unusedVar","'setSerachResult' is assigned a value but never used.","'setSerachResultByType' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'key' is assigned a value but never used.","'axiosInstance' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]